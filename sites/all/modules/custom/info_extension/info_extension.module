<?php

/*
 * Implementation of hook_init()
 */

function info_extension_init() {
    drupal_add_css(drupal_get_path('module', 'info_extension') . '/css/style.css', 'theme');
//    drupal_add_css(drupal_get_path('module', 'info_extension') . '/css/smoothDivScroll.css', 'theme');
    drupal_add_js(drupal_get_path('module', 'info_extension') . '/js/actions.js');
//    drupal_add_js(drupal_get_path('module', 'info_extension') . '/js/jquery.ui.widget.js');
//    drupal_add_js(drupal_get_path('module', 'info_extension') . '/js/jquery.smoothDivScroll-1.1-min.js');
}

function info_extension_user($op, &$edit, &$account, $category = NULL) {
    switch ($op) {
        case 'insert':
            drupal_set_message('Регистрация прошла успешно, вы можете '.l('изменить','user/'.$account->uid.'/edit').' свои данные во вкладке '.l('"Мой профиль"', 'user'));
            break;
        case 'login':
            drupal_goto();
            break;
    }
}

/**
 * Implementation of hook_menu()
 */
function info_extension_menu() {
    $items = array();
    $items['info_extension/ajax/events_view'] = array(
        'title' => 'Контакты',
        'page callback' => 'info_extension_events_view',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    return $items;
}

/**
 * info_extension/ajax/events_view ajax response
 */
function info_extension_events_view() {
    $view = $_POST;
    switch ($view['info_item_id']) {
        case 'autocatalog':
            $output = info_extension_views_embed_view('autocatalog', 'block_1', $view['page'], $view['info_extension_nid']);
            break;
        default:
            $output = info_extension_views_embed_view('events', 'block_1', $view['page'], $view['info_extension_nid'], $view['info_item_id']);
            break;
    }
    unset($_POST);
    print $output;
}

/*
 * Implementation of hook_block
 */

//function info_extension_block($op = 'list', $delta = 0, $edit = array()) {
//    if ($op == 'list') {
//        $blocks[0] = array('info' => t('Top banner (info_additions)'));
//        $blocks[1] = array('info' => t('Right banner (info_additions)'));
//        return $blocks;
//    } else if ($op == 'view') {
//        switch ($delta) {
//            case 0:
//                $block = array(
//                    'content' => info_additions_top_banner(),
//                    );
//                break;
//            case 1:
//                $block = array(
//                    'content' => info_additions_right_banner(),
//                    );
//                break;
//        }
//        return $block;
//    }
//}

/**
 * Implementation of hook_nodeapi
 */
function info_extension_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
    switch ($op) {
        case 'presave':
            break;
        case 'insert':
        case 'update':
            break;
        case 'view':
            if ($node->type == 'autoservice') {
//                print_r($node->content['field_a_photo']);die;
//                jcarousel_add('field-field-a-photo');
//                $node->content['field_a_photo'] = array(
//                    '#value' => theme_jcarousel(array('qwe', 'qwe2', 'qwe3')),
//                    '#weight' => 6,
//                );
//                $node->content['field_a_photo'] = array(
//                    '#prefix' => 'qwe',
//                    '#suffix' => 'qwe',
//                );
                $node->content['info_extension_events_view'] = array(
                    '#value' => info_extension_autoservice_view_render($node->nid),
                    '#weight' => 4,
                );
                $field_a_partners_nids = array();
                foreach ($node->field_a_partners as $key => $value) {
                    $field_a_partners_nids[] = $value['nid'];
                }
//                print_r($field_a_partners_nids);die;
//                print(views_embed_view('autoservice_partners_field', 'page_1', implode(',',$field_a_partners_nids)));die;
                $node->content['field_a_partners'] = array(
                  '#value'=>  views_embed_view('autoservice_partners_field', 'page_1', implode(',',$field_a_partners_nids)),
                    '#weight'=>10,
                );
//                print_r($node->field_a_partners);die;
//                print_r($node->content['field_a_partners']);die;
                $node->content['body']['#value'] = "<div class=info_extension_node_body>{$node->content['body']['#value']}</div>";
                drupal_add_js('
                var info_extension_nid = ' . $node->nid . ';
                ', 'inline');
            }
//            if ($node->type == 'contest') {
//                $node->content['field_c_photo']['#value'] .= 'qwe123';
//            }
            break;
        case 'alter':
//            print_r($node->content['field_a_photo']);
//                die;
            break;
    }
}

function info_extension_autoservice_view_render($nid) {
    if ($nid) {
        $output = '';
        $menu_output = '';
        $i = 0;
        $pages = array(
            'События' => 57,
            'Акции' => 58,
            'Скидки' => 59,
            'Новинки' => 60,
            'Конкурсы' => 61,
        );
        foreach ($pages as $key => $value) {
            $view = info_extension_views_embed_view('events', 'block_1', 0, $nid, $value);
            if ($view) {
                if ($i == 0)
                    $active = 'active'; else
                    $active = '';
                $menu_output .= "<div class='info_extension_menu_item menu_action_{$value} {$active} c_button' rel=info_item_{$value}>{$key}</div>";
                $output .= "<div class='info_extension_content_item action_{$value}' info_item_id = {$value} rel=info_item_{$value}>";
                $output .= $view;
                $output .= "</div>";
                $i++;
            }
        }
        $view = info_extension_views_embed_view('autocatalog', 'block_1', 0, $nid);
        if ($view) {
            if ($i == 0)
                $active = 'active'; else
                $active = '';
            $menu_output .= "<div class='info_extension_menu_item menu_action_autocatalog {$active} c_button' rel=info_item_autocatalog>Автокаталог</div>";
            $output .= "<div class='info_extension_content_item action_autocatalog' info_item_id = 'autocatalog' rel=info_item_autocatalog>";
            $output .= $view;
            $output .= "</div>";
        }
        if ($menu_output)
            return "<div class=info_extension_block><div class=info_extension_menu>{$menu_output}</div><div class=info_extension_content>{$output}</div></div>";
    }
}

function info_extension_views_embed_view($name, $display_id = 'default', $page = 0) {
    $args = func_get_args();
    array_shift($args); // remove $name
    if (count($args)) {
        array_shift($args); // remove $display_id
        array_shift($args); // remove $page
    }

    $view = views_get_view($name);
    if (!$view || !$view->access($display_id)) {
        return;
    }

    if (empty($view->current_display) || $view->current_display != $display_id) {
        if (!$view->set_display($display_id)) {
            return FALSE;
        }
    }

    $view->preview = TRUE;
    $view->pre_execute($args);
    if ($page) {
        $view->pager['current_page'] = $page;
    }
    $output = $view->display_handler->preview();
    $view->post_execute();
    if ($view->result) {
        return $output;
    } else {
        return FALSE;
    }

//    return $view->preview($display_id, $args);
}
